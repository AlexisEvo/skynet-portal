worker_processes 4;
daemon off;

events {
  worker_connections 1024;
}

http {
  log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

  error_log logs/error.log;
  access_log logs/access.log upstream_time;

  resolver 8.8.8.8;

  proxy_cache_path cache levels=1:2 keys_zone=sia_cache:100m max_size=100g inactive=600m use_temp_path=off;


  server {
    listen 8080;

    location / {
      default_type text/html;
      content_by_lua_block {
        ngx.say("<p>hello, world</p>")
      }
    }

    location ~ "^/([a-zA-Z0-9]{5,7})(\.(.+))?$" {
      set $uuid '';

      rewrite_by_lua_block {
        local short_code = ngx.unescape_uri(ngx.var[1])
        local uuid = (require "app/main").resolve_short_code(short_code)

        ngx.var.uuid = "https://siasky.net/" .. uuid
      }

      include "siad-proxy.conf";
    }


    location ~ "^/([a-zA-Z0-9]{5,7})(/(.*)?)$" {
      set $uuid '';

      rewrite_by_lua_block {
        local short_code = ngx.unescape_uri(ngx.var[1])
        local subfile = ngx.unescape_uri(ngx.var[2])
        local uuid = (require "app/main").resolve_short_code(short_code)

        ngx.var.uuid = "https://siasky.net/" .. uuid .. subfile
      }

      include "siad-proxy.conf";
    }

    # TODO: implement customer specific slotting, eg
    # /$bucketid/media/banner.jpg


  } # server

} # http

